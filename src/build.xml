<project name="RefactoringProject" default="run_tests" basedir=".">
	<path id="cobertura.classpath">

		<fileset dir=".">

			<include name="saferefactor.jar" />
			<!--<include name="**/*.jar" />-->
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

	<path id="classpath">
		<fileset dir="." includes="saferefactor.jar" />
	</path>

	<path id="classpath_source">
		<fileset dir="${source}/" includes="${lib}/*.jar" />
	</path>

	<target name="init">
		<mkdir dir="${tests.folder}/source" />
		<mkdir dir="${tests.folder}/source2" />
		<mkdir dir="${tests.folder}/source3" />
	</target>

	<target name="clean" depends="init">
		<delete includeemptydirs="false">
			<fileset dir="${tests.folder}/" includes="**/*" />
			<fileset dir="${tests.folder}/bin" includes="**/*" />
			<fileset dir="${tests.folder}/source" includes="**/*" />
			<fileset dir="${tests.folder}/target" includes="**/*" />
			<fileset dir="${tests.folder}/source2" includes="**/*" />
			<fileset dir="${tests.folder}/source3" includes="**/*" />
		</delete>
	</target>

	<target name="analyze_target" depends="clean">
		<echo>
			            Analyzing target methods
			        </echo>
		<java classname="br.edu.ufcg.saferefactor.core.TargetAnalyzer" fork="true" maxmemory="256m">
			<arg value="${source}" />
			<arg value="${target}" />
			<arg value="${bin}" />
			<arg value="${src}" />
			<arg value="${lib}" />
			<arg value="${timeout}" />

			<classpath>
				<pathelement location="saferefactor.jar" />
				<pathelement path="${java.class.path}" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/bin" />
				<pathelement path="${target}/${bin}" />
			</classpath>
			<classpath refid="classpath_source" />

			<!--<classpath>
					<pathelement path="bin" />
					<pathelement path="${target}/${bin}" />
				</classpath>
				<classpath refid="classpath_source" />
							<classpath refid="classpath" />-->
		</java>
	</target>

	<target name="generate_tests" depends="analyze_target">
		<echo>
	            Generating tests
	        </echo>
		<java classname="br.edu.ufcg.saferefactor.core.Saferefactor" fork="true" maxmemory="1024m">
			<jvmarg value="-Xmx1024m" />
			<arg value="${source}" />
			<arg value="${target}" />
			<arg value="${bin}" />
			<arg value="${src}" />
			<arg value="${lib}" />
			<arg value="${timeout}" />
			<arg value="${classes}" />
			<arg value="${maxTests}" />
			<arg value="${criteria}" />
			<classpath>
				<pathelement location="saferefactor.jar" />
				<pathelement path="${java.class.path}" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/randoop.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant-junit.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant-launcher.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/asm-3.0.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/asm-tree-3.0.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/aspectjrt.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/cobertura.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/jakarta-oro-2.0.8.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/junit-4.5.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/log4j-1.2.9.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/plume.jar" />

				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/bin" />
				<pathelement path="${source}/${bin}" />
			</classpath>
			<classpath refid="classpath_source" />
		</java>
	</target>

	<target name="compile_tests" depends="generate_tests">
		<echo>Compiling the tests</echo>
		<javac fork="yes" memorymaximumsize="512m" includes="*.java" debug="on" srcdir="${tests.folder}/" destdir="${tests.folder}/bin">
			<classpath>
				<fileset dir="${source}/${lib}">
					<include name="**/*.jar" />
				</fileset>
				<pathelement location="saferefactor.jar" />
				<pathelement path="${java.class.path}" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/junit-4.5.jar" />
				<pathelement location="${source}/${bin}" />
			</classpath>
			<classpath refid="classpath_source" />
		</javac>
	</target>

	<!--<target name="instrument" depends="compile_tests">
		<cobertura-instrument todir="${source}/${build.instrumented.dir}">
			<fileset dir="${source}/${bin}">
				<include name="**/*.class" />
			</fileset>
		</cobertura-instrument>
	</target>-->

	<target name="run_tests" depends="compile_tests">
		<echo>Running JUnit to test the "source"</echo>
		<junit printsummary="yes" showoutput="no" haltonfailure="yes" fork="true" maxmemory="1024m" tempdir="/home/felype/workspaceMestrado/saferefactoraj">
			<!--<classpath location="lib/cobertura.jar" />
			<classpath location="${source}/${build.instrumented.dir}" />-->
			<classpath>
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/junit-4.5.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant-junit.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant-launcher.jar" />
				<fileset dir="${source}/${lib}">
					<include name="**/*.jar" />
				</fileset>
				<pathelement location="saferefactor.jar" />
				<pathelement path="${java.class.path}" />
				<pathelement location="${source}/${bin}" />
				<pathelement location="${tests.folder}/bin" />
			</classpath>
			<classpath refid="classpath_source" />
			<formatter type="xml" />
			<batchtest todir="${tests.folder}/source" haltonfailure="no">
				<fileset dir="${tests.folder}/bin">
					<include name="*Test*.class" />
					<exclude name="RandoopTest.class" />
				</fileset>
			</batchtest>
		</junit>
		<echo>Running JUnit to test the "target"</echo>
		<junit printsummary="yes" showoutput="no" haltonfailure="yes" fork="true" maxmemory="1024m" tempdir="/home/felype/workspaceMestrado/saferefactoraj">
			<classpath>
				<fileset dir="${target}/${lib}">
					<include name="**/*.jar" />
				</fileset>
				<pathelement location="saferefactor.jar" />
				<pathelement path="${java.class.path}" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/junit-4.5.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant-junit.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant-launcher.jar" />
				<pathelement location="${target}/${bin}" />
				<pathelement location="${tests.folder}/bin" />
			</classpath>
			<classpath refid="classpath_source" />
			<formatter type="xml" />
			<batchtest todir="${tests.folder}/target" haltonfailure="no">
				<fileset dir="${tests.folder}/bin">
					<include name="*Test*.class" />
					<exclude name="RandoopTest.class" />
				</fileset>
			</batchtest>
		</junit>
		<echo>Running JUnit to test the "source" again</echo>
		<junit printsummary="yes" showoutput="no" haltonfailure="yes" fork="true" maxmemory="1024m" tempdir="/home/felype/workspaceMestrado/saferefactoraj">
			<!--<classpath location="lib/cobertura.jar" />
					<classpath location="${source}/${build.instrumented.dir}" />-->
			<classpath>
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/junit-4.5.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant-junit.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant-launcher.jar" />

				<fileset dir="${source}/${lib}">
					<include name="**/*.jar" />
				</fileset>
				<pathelement location="saferefactor.jar" />
				<pathelement path="${java.class.path}" />
				<pathelement location="${source}/${bin}" />
				<pathelement location="${tests.folder}/bin" />
			</classpath>
			<classpath refid="classpath_source" />
			<formatter type="xml" />
			<batchtest todir="${tests.folder}/source2" haltonfailure="no">
				<fileset dir="${tests.folder}/bin">
					<include name="*Test*.class" />
					<exclude name="RandoopTest.class" />
				</fileset>
			</batchtest>
		</junit>
		<!--<echo>Running JUnit to test the "source" again again</echo>
		<junit printsummary="yes" showoutput="no" haltonfailure="yes" fork="true" maxmemory="1024m" tempdir="/home/felype/workspaceMestrado/saferefactoraj">
			<classpath location="lib/cobertura.jar" />
							<classpath location="${source}/${build.instrumented.dir}" />-->
		<!--	<classpath>
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/junit-4.5.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant-junit.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant-launcher.jar" />

				<fileset dir="${source}/${lib}">
					<include name="**/*.jar" />
				</fileset>
				<pathelement location="saferefactor.jar" />
				<pathelement path="${java.class.path}" />
				<pathelement location="${source}/${bin}" />
				<pathelement location="${tests.folder}/bin" />
			</classpath>
			<classpath refid="classpath_source" />
			<formatter type="xml" />
			<batchtest todir="${tests.folder}/source3" haltonfailure="no">
				<fileset dir="${tests.folder}/bin">
					<include name="*Test*.class" />
					<exclude name="RandoopTest.class" />
				</fileset>
			</batchtest>
		</junit>
		-->

	</target>

	<!--<target name="coverage" depends="run_tests">
		<cobertura-report srcdir="${source}/${src}" destdir="${build.coverage.dir}" />
	</target>-->
	

	
	<target name="coverage">
		<property name="emma.dir" value="/home/felype/workspaceMestrado/saferefactoraj/lib" />
		
		<path id="emma.lib" >
			<pathelement location="${emma.dir}/emma.jar" />
			<pathelement location="${emma.dir}/emma_ant.jar" />
		</path>

		<taskdef resource="emma_ant.properties" classpathref="emma.lib" />
		
		<property name="emma.enabled" value="true" />
		
		
		<property name="out.instr.dir" value="${source}/outinstr" />
		<property name="instr.dir" value="${source}/instr" />
		
		<mkdir dir="${out.instr.dir}" />
		<mkdir dir="${instr.dir}" />
		
		<emma enabled="${emma.enabled}">
			<instr instrpath="${source}/bin" destdir="${out.instr.dir}" metadatafile="${instr.dir}/metadata_source.emma" merge="true" />
		</emma>
			
		<junit printsummary="yes" showoutput="no" haltonfailure="yes" fork="true" 
			maxmemory="1024m" tempdir="/home/felype/workspaceMestrado/saferefactoraj">
			<classpath>
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/junit-4.5.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant-junit.jar" />
				<pathelement path="/home/felype/workspaceMestrado/saferefactoraj/lib/ant-launcher.jar" />

				<fileset dir="${source}/${lib}">
					<include name="**/*.jar" />
				</fileset>
				<pathelement location="saferefactor.jar" />
				<pathelement path="${java.class.path}" />
				
				<path refid="emma.lib" />
				<pathelement path="${out.instr.dir}" />
				
				<pathelement location="${source}/${bin}" />
				<pathelement location="${tests.folder}/bin" />
			</classpath>
			<classpath refid="classpath_source" />
			
			<jvmarg value="-Demma.coverage.out.file=${instr.dir}/metadata_source.emma" />
			<jvmarg value="-Demma.coverage.out.merge=true" />
			
			<formatter type="xml" />
			<batchtest todir="${tests.folder}/source2" haltonfailure="no">
				<fileset dir="${tests.folder}/bin">
					<include name="*Test*.class" />
					<exclude name="RandoopTest.class" />
				</fileset>
			</batchtest>
		</junit>
		
		<emma>
			<report sourcepath="${source}/src">
				<fileset dir="${source}/instr">
					<include name="*source.emma" />
				</fileset>
				<xml outfile="${source}/report.xml" depth="method"/>
				<html outfile="${source}/report.html" depth="method"/>
			</report>
		</emma>
	</target>



</project>
