Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type char
Adding sequence to active sequences of type char
Adding sequence to active sequences of type char
Adding sequence to active sequences of type char
Adding sequence to active sequences of type boolean
Adding sequence to active sequences of type boolean
Adding sequence to active sequences of type class java.lang.String
Adding sequence to active sequences of type class java.lang.String
getActivesequencesThatYield: entering method, clazz=boolean
getActivesequencesThatYield: returning 2 sequences.
getActivesequencesThatYield: entering method, clazz=byte
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=char
getActivesequencesThatYield: returning 4 sequences.
getActivesequencesThatYield: entering method, clazz=double
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=float
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=short
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=class java.lang.String
getActivesequencesThatYield: returning 2 sequences.
Statements : 
java.lang.Object.<init>()
lancs.mobilemedia.core.util.ImageUtil.<init>()
lancs.mobilemedia.lib.exceptions.NullAlbumDataReference.<init>()
lancs.mobilemedia.lib.exceptions.NullAlbumDataReference.<init>(java.lang.String)
lancs.mobilemedia.lib.exceptions.NullAlbumDataReference.<init>(java.lang.Throwable)
lancs.mobilemedia.lib.exceptions.ImageNotFoundException.<init>()
lancs.mobilemedia.lib.exceptions.ImageNotFoundException.<init>(java.lang.String)
lancs.mobilemedia.lib.exceptions.ImageNotFoundException.<init>(java.lang.Throwable)
lancs.mobilemedia.lib.exceptions.ImagePathNotValidException.<init>()
lancs.mobilemedia.lib.exceptions.ImagePathNotValidException.<init>(java.lang.String)
lancs.mobilemedia.lib.exceptions.ImagePathNotValidException.<init>(java.lang.Throwable)
lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException.<init>()
lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException.<init>(java.lang.String)
lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException.<init>(java.lang.Throwable)
lancs.mobilemedia.lib.exceptions.InvalidImageDataException.<init>()
lancs.mobilemedia.lib.exceptions.InvalidImageDataException.<init>(java.lang.String)
lancs.mobilemedia.lib.exceptions.InvalidImageDataException.<init>(java.lang.Throwable)
lancs.mobilemedia.lib.exceptions.InvalidPhotoAlbumNameException.<init>()
lancs.mobilemedia.lib.exceptions.InvalidPhotoAlbumNameException.<init>(java.lang.String)
lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException.<init>()
lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException.<init>(java.lang.String)
lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException.<init>(java.lang.Throwable)
lancs.mobilemedia.lib.exceptions.InvalidImageFormatException.<init>()
lancs.mobilemedia.lib.exceptions.InvalidImageFormatException.<init>(java.lang.String)
lancs.mobilemedia.lib.exceptions.InvalidImageFormatException.<init>(java.lang.Throwable)
lancs.mobilemedia.core.ui.datamodel.ImageData.<init>(int,java.lang.String,java.lang.String)
lancs.mobilemedia.lib.exceptions.PersistenceMechanismException.<init>(java.lang.String)
lancs.mobilemedia.lib.exceptions.PersistenceMechanismException.<init>()
lancs.mobilemedia.lib.exceptions.PersistenceMechanismException.<init>(java.lang.Throwable)
lancs.mobilemedia.core.util.Constants.<init>()
lancs.mobilemedia.core.util.ImageUtil.readImageAsByteArray(java.lang.String)
lancs.mobilemedia.core.util.ImageUtil.getImageInfoFromBytes([B)
lancs.mobilemedia.core.util.ImageUtil.getBytesFromImageInfo(lancs.mobilemedia.core.ui.datamodel.ImageData)
Initial sequences (seeds):
var0 =  prim : byte:-1 : 

var0 =  prim : byte:0 : 

var0 =  prim : byte:1 : 

var0 =  prim : byte:10 : 

var0 =  prim : byte:100 : 

var0 =  prim : short:-1 : 

var0 =  prim : short:0 : 

var0 =  prim : short:1 : 

var0 =  prim : short:10 : 

var0 =  prim : short:100 : 

var0 =  prim : int:-1 : 

var0 =  prim : int:0 : 

var0 =  prim : int:1 : 

var0 =  prim : int:10 : 

var0 =  prim : int:100 : 

var0 =  prim : long:-1 : 

var0 =  prim : long:0 : 

var0 =  prim : long:1 : 

var0 =  prim : long:10 : 

var0 =  prim : long:100 : 

var0 =  prim : float:-1.0 : 

var0 =  prim : float:0.0 : 

var0 =  prim : float:1.0 : 

var0 =  prim : float:10.0 : 

var0 =  prim : float:100.0 : 

var0 =  prim : double:-1.0 : 

var0 =  prim : double:0.0 : 

var0 =  prim : double:1.0 : 

var0 =  prim : double:10.0 : 

var0 =  prim : double:100.0 : 

var0 =  prim : char:23 : 

var0 =  prim : char:20 : 

var0 =  prim : char:34 : 

var0 =  prim : char:61 : 

var0 =  prim : boolean:true : 

var0 =  prim : boolean:false : 

var0 =  prim : java.lang.String:"" : 

var0 =  prim : java.lang.String:"hi!" : 

-------------------------------------------
randoop.util.Randomness: total calls to random: 1
Selected statement: java.lang.Object.<init>()
Successfully created new unique sequence:var0 =  cons : java.lang.Object.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class java.lang.Object
Sequence after execution: 
java.lang.Object var0 = new java.lang.Object();
// <NormalExecution object=object-of-type-java.lang.Object>;

allSequences.size()=1
-------------------------------------------
randoop.util.Randomness: total calls to random: 2
Selected statement: lancs.mobilemedia.lib.exceptions.PersistenceMechanismException.<init>()
Successfully created new unique sequence:var0 =  cons : lancs.mobilemedia.lib.exceptions.PersistenceMechanismException.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class lancs.mobilemedia.lib.exceptions.PersistenceMechanismException
Sequence after execution: 
lancs.mobilemedia.lib.exceptions.PersistenceMechanismException var0 = new lancs.mobilemedia.lib.exceptions.PersistenceMechanismException();
// <NormalExecution object=object-of-type-lancs.mobilemedia.lib.exceptions.PersistenceMechanismException>;

allSequences.size()=2
-------------------------------------------
randoop.util.Randomness: total calls to random: 3
Selected statement: lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException.<init>(java.lang.Throwable)
Will query component set for objects of typeclass java.lang.Throwable
getActivesequencesThatYield: entering method, clazz=class java.lang.Throwable
getActivesequencesThatYield: returning 1 sequences.
components: 1
randoop.util.Randomness: total calls to random: 4
randoop.util.Randomness: total calls to random: 5
Successfully created new unique sequence:var0 =  cons : lancs.mobilemedia.lib.exceptions.PersistenceMechanismException.<init>() : 
var1 =  cons : lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException.<init>(java.lang.Throwable) : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Checking contract class randoop.EqualsHashcode on 1, 1
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 1, 1
Contract returned true.
Making index 0 active.
Making index 1 active.
Adding sequence to active sequences of type class lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException
Adding sequence to active sequences of type class lancs.mobilemedia.lib.exceptions.PersistenceMechanismException
Sequence after execution: 
lancs.mobilemedia.lib.exceptions.PersistenceMechanismException var0 = new lancs.mobilemedia.lib.exceptions.PersistenceMechanismException();
// <NormalExecution object=object-of-type-lancs.mobilemedia.lib.exceptions.PersistenceMechanismException>;
lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException var1 = new lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException((java.lang.Throwable)var0);
// <NormalExecution object=object-of-type-lancs.mobilemedia.lib.exceptions.UnavailablePhotoAlbumException>;

allSequences.size()=3
-------------------------------------------
randoop.util.Randomness: total calls to random: 6
Selected statement: lancs.mobilemedia.lib.exceptions.ImagePathNotValidException.<init>()
Successfully created new unique sequence:var0 =  cons : lancs.mobilemedia.lib.exceptions.ImagePathNotValidException.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class lancs.mobilemedia.lib.exceptions.ImagePathNotValidException
Sequence after execution: 
lancs.mobilemedia.lib.exceptions.ImagePathNotValidException var0 = new lancs.mobilemedia.lib.exceptions.ImagePathNotValidException();
// <NormalExecution object=object-of-type-lancs.mobilemedia.lib.exceptions.ImagePathNotValidException>;

allSequences.size()=4
-------------------------------------------
randoop.util.Randomness: total calls to random: 7
Selected statement: lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException.<init>(java.lang.Throwable)
Will query component set for objects of typeclass java.lang.Throwable
getActivesequencesThatYield: entering method, clazz=class java.lang.Throwable
getActivesequencesThatYield: returning 4 sequences.
components: 4
randoop.util.Randomness: total calls to random: 8
randoop.util.Randomness: total calls to random: 9
Successfully created new unique sequence:var0 =  cons : lancs.mobilemedia.lib.exceptions.PersistenceMechanismException.<init>() : 
var1 =  cons : lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException.<init>(java.lang.Throwable) : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Checking contract class randoop.EqualsHashcode on 1, 1
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 1, 1
Contract returned true.
Making index 0 active.
Making index 1 active.
Adding sequence to active sequences of type class lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException
Adding sequence to active sequences of type class lancs.mobilemedia.lib.exceptions.PersistenceMechanismException
Sequence after execution: 
lancs.mobilemedia.lib.exceptions.PersistenceMechanismException var0 = new lancs.mobilemedia.lib.exceptions.PersistenceMechanismException();
// <NormalExecution object=object-of-type-lancs.mobilemedia.lib.exceptions.PersistenceMechanismException>;
lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException var1 = new lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException((java.lang.Throwable)var0);
// <NormalExecution object=object-of-type-lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException>;

allSequences.size()=5
-------------------------------------------
randoop.util.Randomness: total calls to random: 10
Selected statement: lancs.mobilemedia.lib.exceptions.InvalidImageDataException.<init>(java.lang.Throwable)
Will query component set for objects of typeclass java.lang.Throwable
getActivesequencesThatYield: entering method, clazz=class java.lang.Throwable
getActivesequencesThatYield: returning 6 sequences.
components: 6
randoop.util.Randomness: total calls to random: 11
randoop.util.Randomness: total calls to random: 12
Successfully created new unique sequence:var0 =  cons : lancs.mobilemedia.lib.exceptions.PersistenceMechanismException.<init>() : 
var1 =  cons : lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException.<init>(java.lang.Throwable) : var0 
var2 =  cons : lancs.mobilemedia.lib.exceptions.InvalidImageDataException.<init>(java.lang.Throwable) : var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Checking contract class randoop.EqualsHashcode on 1, 1
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 1, 1
Contract returned true.
Checking contract class randoop.EqualsHashcode on 2, 2
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 2, 2
Contract returned true.
Making index 0 active.
Making index 1 active.
Making index 2 active.
Adding sequence to active sequences of type class lancs.mobilemedia.lib.exceptions.InvalidImageDataException
Adding sequence to active sequences of type class lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException
Sequence after execution: 
lancs.mobilemedia.lib.exceptions.PersistenceMechanismException var0 = new lancs.mobilemedia.lib.exceptions.PersistenceMechanismException();
// <NormalExecution object=object-of-type-lancs.mobilemedia.lib.exceptions.PersistenceMechanismException>;
lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException var1 = new lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException((java.lang.Throwable)var0);
// <NormalExecution object=object-of-type-lancs.mobilemedia.lib.exceptions.InvalidArrayFormatException>;
lancs.mobilemedia.lib.exceptions.InvalidImageDataException var2 = new lancs.mobilemedia.lib.exceptions.InvalidImageDataException((java.lang.Throwable)var1);
// <NormalExecution object=object-of-type-lancs.mobilemedia.lib.exceptions.InvalidImageDataException>;

allSequences.size()=6
-------------------------------------------
randoop.util.Randomness: total calls to random: 13
Selected statement: lancs.mobilemedia.core.ui.datamodel.ImageData.<init>(int,java.lang.String,java.lang.String)
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 14
randoop.util.Randomness: total calls to random: 15
Will query component set for objects of typeclass java.lang.String
getActivesequencesThatYield: entering method, clazz=class java.lang.String
getActivesequencesThatYield: returning 2 sequences.
components: 2
randoop.util.Randomness: total calls to random: 16
randoop.util.Randomness: total calls to random: 17
Will query component set for objects of typeclass java.lang.String
getActivesequencesThatYield: entering method, clazz=class java.lang.String
getActivesequencesThatYield: returning 2 sequences.
components: 2
randoop.util.Randomness: total calls to random: 18
randoop.util.Randomness: total calls to random: 19
Successfully created new unique sequence:var0 =  prim : int:1 : 
var1 =  prim : java.lang.String:"hi!" : 
var2 =  prim : java.lang.String:"" : 
var3 =  cons : lancs.mobilemedia.core.ui.datamodel.ImageData.<init>(int,java.lang.String,java.lang.String) : var0 var1 var2 

Checking contract class randoop.EqualsHashcode on 3, 3
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 3, 3
Contract returned true.
Making index 0 inactive (value is a primitive)
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 active.
Adding sequence to active sequences of type class lancs.mobilemedia.core.ui.datamodel.ImageData
Sequence after execution: 
java.lang.Integer var0 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.String var1 = "hi!";
// <NormalExecution object=object-of-type-java.lang.String>;
java.lang.String var2 = "";
// <NormalExecution object=object-of-type-java.lang.String>;
lancs.mobilemedia.core.ui.datamodel.ImageData var3 = new lancs.mobilemedia.core.ui.datamodel.ImageData(1, "hi!", "");
// <NormalExecution object=object-of-type-lancs.mobilemedia.core.ui.datamodel.ImageData>;

allSequences.size()=7
-------------------------------------------
randoop.util.Randomness: total calls to random: 20
Selected statement: lancs.mobilemedia.lib.exceptions.InvalidImageFormatException.<init>()
Successfully created new unique sequence:var0 =  cons : lancs.mobilemedia.lib.exceptions.InvalidImageFormatException.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class lancs.mobilemedia.lib.exceptions.InvalidImageFormatException
Sequence after execution: 
lancs.mobilemedia.lib.exceptions.InvalidImageFormatException var0 = new lancs.mobilemedia.lib.exceptions.InvalidImageFormatException();
// <NormalExecution object=object-of-type-lancs.mobilemedia.lib.exceptions.InvalidImageFormatException>;

allSequences.size()=8
