<<<<<<< HEAD
<project name="RefactoringProject" default="OI" basedir="../">

	<!-- <property file="ant/build.properties" /> -->

	<path id="cobertura.classpath">
		<fileset dir="lib">
			<include name="cobertura.jar" />
			<include name="**/*.jar" />
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

	<path id="classpath">
		<fileset dir="lib" includes="*.jar" excludes="${aspects}" />
	</path>

	<path id="classpath_source">
		<fileset dir="${source}/" includes="${lib}/*.jar" />
	</path>

	<target name="OI">
			<echo> OI !</echo>
	</target>
	
	
	<target name="clean">
	<echo> Clear all tests. </echo>
		<delete includeemptydirs="false">
			<fileset dir="${tests.folder}/" includes="**/*" />
			<fileset dir="${tests.folder}/bin" includes="**/*" />
			<fileset dir="${tests.folder}/source" includes="**/*" />
			<fileset dir="${tests.folder}/target" includes="**/*" />
		</delete>
	</target>

	<target name="analyze_target" depends="clean">
		<echo> Analyzing TARGET methods </echo>
		<java classname="br.edu.ufcg.saferefactor.core.TargetAnalyzer" fork="true" maxmemory="256m">
			<arg value="${source}" />
			<arg value="${target}" />
			<arg value="${bin}" />
			<arg value="${src}" />
			<arg value="${lib}" />
			<arg value="${timeout}" />

			<classpath>
				<pathelement path="D:/documentos/Msc/SE/workspace/ferramentaLPSSM/bincopy" />
				<pathelement path="${target}/${bin}" />
			</classpath>
			<classpath refid="classpath_source" />
			<classpath refid="classpath" />
		</java>
	</target>

	<target name="generate_tests" depends="analyze_target">
		<echo>GENERATING TESTS </echo>
		<java classname="br.edu.ufcg.saferefactor.core.Saferefactor" fork="true" maxmemory="256m">
			<arg value="${source}" />
			<arg value="${target}" />
			<arg value="${bin}" />
			<arg value="${src}" />
			<arg value="${lib}" />
			<arg value="${timeout}" />
			<classpath refid="classpath" />
			<classpath refid="classpath_source" />

			<classpath>
				<pathelement path="D:/documentos/Msc/SE/workspace/ferramentaLPSSM/bincopy" />
				<pathelement path="${source}/${bin}" />
			</classpath>
		</java>
	</target>

	<target name="compile_tests" depends="generate_tests">
		<echo>COMPILING THE TESTS</echo>
		<javac fork="yes" memorymaximumsize="512m" includes="*.java" debug="on" srcdir="${tests.folder}/" destdir="${tests.folder}/bin">
			<classpath>
				<fileset dir="${source}/${lib}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
				<pathelement location="${source}/${bin}" />
			</classpath>
		</javac>
	</target>

	<!--<target name="instrument" depends="compile_tests">
		<cobertura-instrument todir="${source}/${build.instrumented.dir}">
			<fileset dir="${source}/${bin}">
				<include name="**/*.class" />
			</fileset>
		</cobertura-instrument>
	</target>-->

	<target name="run_tests" depends="compile_tests">
		<echo>Running JUnit to test the "source"</echo>
		<junit printsummary="yes" haltonfailure="yes" fork="true" maxmemory="512m">
			<!--<classpath location="lib/cobertura.jar" />
			<classpath location="${source}/${build.instrumented.dir}" />-->
			<classpath>
				<fileset dir="${source}/${lib}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="lib">
					<include name="**/*.jar" />
					<exclude name="${aspects}" />
				</fileset>
				<pathelement location="${source}/${bin}" />
				<pathelement location="${tests.folder}/bin" />
			</classpath>
			<formatter type="xml" />
			<batchtest todir="${tests.folder}/source" haltonfailure="no">
				<fileset dir="${tests.folder}/bin">
					<include name="*Test.class" />
				</fileset>
			</batchtest>
		</junit>
		<echo>Running JUnit to test the "target"</echo>
		<junit printsummary="yes" haltonfailure="yes" fork="true" maxmemory="512m">
			<classpath>
				<fileset dir="${target}/${lib}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="lib">
					<include name="**/*.jar" />
					<exclude name="${aspects}" />
				</fileset>
				<pathelement location="${target}/${bin}" />
				<pathelement location="${tests.folder}/bin" />
			</classpath>
			<formatter type="xml" />
			<batchtest todir="${tests.folder}/target" haltonfailure="no">
				<fileset dir="${tests.folder}/bin">
					<include name="*Test.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!--<target name="coverage" depends="run_tests">
		<cobertura-report srcdir="${source}/${src}" destdir="${build.coverage.dir}" />
	</target>-->



</project>
=======
<project name="RefactoringProject" default="clean" basedir=".">

    <property name="src" location="src"/>
    <property name="lib" location="lib"/>
    <property name="bin" location="bin"/>

    <path id="classpath_source">

    </path>

<property name="src" value="src" />
<property name="build" value="build" />
<property name="dist" value="dist" />
<property name="doc" value="doc" />
<property name="lib" value="lib" />
<property name="test.class.name" value="git.teste.suitTest" />
<property name="test.reports" value="reports" />

<target name="ola">
	<echo message="Ola, Ant executando!" />
</target>

<target name="clean">
		<delete includeemptydirs="true">
			<fileset dir="${build}" includes="**/*" />
			<fileset dir="${bin}" includes="**/*" />
		</delete>
	</target>

<target name="init" depends="clean">
<tstamp/>
<mkdir dir="${build}" />
<mkdir dir="${reports}"/>
</target>



<target name="compile" depends="init">
     <echo> ${src} </echo>
     <echo> ${lib} </echo>
	<javac srcdir="${src}" destdir="${build}" includeAntRuntime="true" includes="**/*.java" excludes="**/*Test.java">
	<classpath>
        <fileset dir="${lib}/">
            <include name="*.jar" />
        </fileset>

        <fileset dir="/home/jefferson/workspace/saferefactoraj/bin/">
            <include name="**/*.class" />
        </fileset>

        <pathelement path="${src}" />
         <pathelement path="${build}" />
    </classpath>
    </javac>
</target>

<target name="dist" depends="compile">
<jar jarfile="${lib}/projeto.jar" basedir="${build}"/>
</target>



</project>
>>>>>>> evosuite
